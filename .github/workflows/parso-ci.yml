# Used Github Actions:
# - Checkout - https://github.com/marketplace/actions/checkout
# - Setup Java JDK - https://github.com/marketplace/actions/setup-java-jdk
# - Cache - https://github.com/marketplace/actions/cache
# - Push Checkstyle report - https://github.com/marketplace/actions/push-checkstyle-report
# - Surefire Report - https://github.com/marketplace/actions/surefire-report
# - Upload a Build Artifact - https://github.com/marketplace/actions/upload-a-build-artifact
# - Upload To Github Release - https://github.com/marketplace/actions/upload-to-github-release
name: Parso CI
on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5 # reasonable limits to be on the safe side
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-parso-ci-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-parso-ci-m2

      - name: Validate
        run: mvn -B -V clean validate -Dcheckstyle.failOnViolation=true

      - name: Publish checkstyle report
        if: always() # in order to publish report even if previous step is failed
        # use sha commit references in order to avoid security issues related to unverified actions and their creators
        uses: jwgmeligmeyling/checkstyle-github-action@50292990e18466f2c5d95d04ff5fab931254fa5f
        with:
          name: Checkstyle Report
          path: '**/checkstyle-result.xml'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile
        run: mvn -B -V compile -Dcheckstyle.skip=true

      - name: Test
        run: mvn -B -V verify -Dmaven.test.failure.ignore=true -Dcheckstyle.skip=true

      - name: Publish test report
        # use sha commit references in order to avoid security issues related to unverified actions and their creators
        uses: scacap/action-surefire-report@ad808943e6bfbd2e6acba7c53fdb5c89534da533
        with:
          check_name: Test Report
          report_paths: '**/*-reports/TEST-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

      - name: Attach artifacts
        uses: actions/upload-artifact@v2
        with:
          name: parso-artifacts
          path: target/parso-*.jar
          if-no-files-found: error

      - name: Version extraction
        id: version-extraction
        run: echo "::set-output name=artifact_version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
    outputs:
      # output parameter that is required for further usage in dependent (downstream) jobs
      artifact_version: ${{ steps.version-extraction.outputs.artifact_version }}

  publish-snapshot:
    needs: [ build ]
    timeout-minutes: 10 # reasonable limits to be on the safe side
    # runs only if produced artifact version is related to SNAPSHOT
    if: ${{ endsWith(needs.build.outputs.artifact_version, '-SNAPSHOT') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh # value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_SERVER_USERNAME # env variable for username in deploy
          server-password: MAVEN_SERVER_PASSWORD # env variable for token in deploy
          settings-path: ${{ github.workspace }} # store not in a default location to be not overwritten by cache restoring

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-parso-ci-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-parso-ci-m2

      - name: Version details
        run: echo "Artifact version to publish - ${{ needs.build.outputs.artifact_version }}"

      - name: Publish
        env:
          MAVEN_SERVER_USERNAME: ${{ secrets.MAVEN_USER }}
          MAVEN_SERVER_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run: mvn -B -V -s $GITHUB_WORKSPACE/settings.xml clean deploy -DskipTests=true -Dcheckstyle.skip=true

  publish-final:
    needs: [ build ]
    timeout-minutes: 10 # reasonable limits to be on the safe side
    # runs only if produced artifact version is final
    if: ${{ !endsWith(needs.build.outputs.artifact_version, '-SNAPSHOT') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh # value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_SERVER_USERNAME # env variable for username in deploy
          server-password: MAVEN_SERVER_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.IP_GPG_PRIVATE_KEY }} # value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
          settings-path: ${{ github.workspace }} # store not in a default location to be not overwritten by cache restoring

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-parso-ci-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-parso-ci-m2

      # TODO add validation to check whether this tag is already submitted or not
      - name: Version details
        run: echo "Artifact version to publish - ${{ needs.build.outputs.artifact_version }}"

      - name: Publish
        env:
          MAVEN_SERVER_USERNAME: ${{ secrets.MAVEN_USER }}
          MAVEN_SERVER_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.IP_GPG_PASSPHRASE }}
        run: mvn -B -V -s $GITHUB_WORKSPACE/settings.xml clean deploy -DskipTests=true -Dcheckstyle.skip=true -DperformRelease=true

      - name: Create draft release
        # use sha commit references in order to avoid security issues related to unverified actions and their creators
        uses: xresloader/upload-to-github-release@3ad14478ee4fb9bd65e84c6d496a7d6862892f43
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: 'target/parso-*.jar'
          delete_file: 'parso-*.jar'
          tag_name: v${{ needs.build.outputs.artifact_version }}
          draft: true
          overwrite: true
          verbose: true
